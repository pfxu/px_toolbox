function px_hm_calc_batch(fdp,para)
%==========================================================================
% FORMAT px_hm_calc_batch(fdp,para)
%  Usage:
%       This function is the batch of px_hm_calc to calculate the head
%       motion parameters of a group subject.
%  Input:
%   fdp.rp      - full path of the rp*.txt files, a m-by-n cell with one
%                 subject in one row and one run in one colmun.
%   para.op     - output path of the head motion measures.
%   <Alternative, 1>
%   para.vsub   - vector of subject's number. e.g., [1:30].
%   para.nrun   - number of runs.
%   para.presub - prefix of subject, it is better to be (double) format.
%                 e.g., '1' or '2'.
%   para.prerun - prefix of run, it is better to be double format.
%   <Alternative, 2>
%   para.ip     - input path of the ^rp*.txt files. The path under the
%                 input shoulb be ../subjects/runs.
%  Output:      -
%                 ExcludeSubjects_*.txt
%                 HeadMotionParameters*.txt
%                 FD_Power_*.txt
%                 FD_VanDijk_*.txt
%                 TRMS_*.txt
%
% Note:
%   If there are multiple runs, spm will realign the first scan of each
% run to the first scan of the first run. Then realign scans in each run
% to the first scan of the corresponding run. However, each rp*.txt file
% was generated by calculating head motion of each run. So, one run has
% one rp*.txt file but there is only one mean* file for the multiple runs.%
%
%  Pengfei Xu, 2013/08/08,QC,CUNY
%==========================================================================
if ~exist(para.op,'dir');mkdir(para.op);end
if isfield(para,'ip')
    sns = px_ls('Reg',para.ip,'-D',0);% subjects name
    nsub = length(sns)-3;
    if ~isfield(para,'vsub');para.vsub = 1: nsub;end
    sp = fullfile(para.ip,sns{1});% All the subject should have same run folder names
    rns = px_ls('Reg',sp,'-D',0);% runs name
    nrun = length(rns)-1;
else
    if ~isfield(para,'vsub');error('None defined para.vsub');end
    if ~isfield(para,'nrun');error('None defined para.nrun');end
%     if ~isfield(para,'presub');error('None defined para.presub');end
%     if ~isfield(para,'prerun');error('None defined para.prerun');end
    nsub = length(para.vsub);
    nrun   = para.nrun;
    nfiles = nrun*length(para.vsub);
    if numel(fdp.rp) ~= nfiles;
        error('number of inputpaths(%d) ~= nsub(%d), please check your input',numel(fdp.rp),nfiles);
    end
end
for nr = 1:nrun
    np = 15;% number of parameters. Including:
    %         max(abs(Tx)),max(abs(Ty)),max(abs(Tz)),
    %         max(abs(Rx)),max(abs(Ry)),max(abs(Rz)),
    %         mean(abs(Tx)),mean(abs(Ty)),mean(abs(Tz)),
    %         mean(abs(Rx)),mean(abs(Ry)),mean(abs(Rz)),
    %         RMS, relative RMS(FD_VanDijk), FD_Power
    HeadMotion = zeros(nsub,np+1);% SubID
    SubID = zeros(nsub,1);
    ns = 0;
    for vs = para.vsub
        ns = ns + 1;
        if isfield(para,'ip')
            sn = sns{vs};
            rn = rns{nr};
        else
            sn = [para.presub num2str(vs,'%03.0f')];
            rn = [para.prerun num2str(nr,'%03.0f')];
        end
        SubID(ns) = str2double(sn);
        if isnan(SubID(ns))
            SubID(ns) = vs;
            fid = fopen(fullfile(para.op,['HeadMotion_SubjectID' rn '.txt']),'at+');
            fprintf(fid,'SubID %d,   %s: Run %s',ns, sn,rn);
            fclose(fid);
        end
        on               = [sn '_' rn];
        SubHeadMotion    = px_hm_calc(fdp.rp{ns,nr},para.op,on);
        HeadMotion(ns,:) = [SubID(ns),SubHeadMotion];
    end
    % Check Head Motion
    ExcludeSub_Text = [];
    for ExcludingCriteria = 3:-0.5:0.5
        BigHeadMotion = find(HeadMotion(:,2:7)>ExcludingCriteria);
        if ~isempty(BigHeadMotion)
            [II,JJ]       = ind2sub([nsub,6],BigHeadMotion);%nsub
            ExcludeSub    = unique(II);
            ExcludeSub_ID = SubID(ExcludeSub);
            TempText      = '';
            for iExcludeSub = 1:length(ExcludeSub_ID)
                TempText = sprintf('%s%d\n',TempText,ExcludeSub_ID(iExcludeSub));
            end
        else
            TempText = 'None';
        end
        ExcludeSub_Text = sprintf('%s\nExcluding Criteria: %2.1fmm and %2.1f degree\n%s\n\n\n',ExcludeSub_Text,ExcludingCriteria,ExcludingCriteria,TempText);
    end
    fid = fopen(fullfile(para.op,['ExcludeSubjects_' rn '.txt']),'at+');
    fprintf(fid,'%s',ExcludeSub_Text);
    fclose(fid);
    
    % Export table for the mean value of each parameter of all subjects.
    HDPName = fullfile(para.op,['HeadMotionParameters_' rn '.txt']);
    if ~exist(HDPName,'file');
        names = sprintf(['Subject ID\tmax(abs(Tx))\tmax(abs(Ty))\tmax(abs(Tz))\tmax(abs(Rx))\tmax(abs(Ry))\tmax(abs(Rz))\t'...
            'mean(abs(Tx))\tmean(abs(Ty))\tmean(abs(Tz))\tmean(abs(Rx))\tmean(abs(Ry))\tmean(abs(Rz))\t',...
            'RMS\t relative RMS(FD_VanDijk)\t FD_Power\n']);
        fid = fopen(HDPName,'at+');
        fprintf(fid,'%s',names);
        fclose(fid);
    end
    save(HDPName, 'HeadMotion', '-append','-ascii', '-double','-tabs');
end
fprintf('\nCalculate head movement done.\n');