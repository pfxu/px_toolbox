function [filelist] = px_text(fop,vn,flag)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  FORMAT [filelist] = px_text(op,on,vn,flag)
%     Usegae This function is used to save the variable to text.
%     Input 
%       fop  - fullfile path for the output txt file. e.g.,
%             '/data/.../*.txt'/
%       vn   - variable name for output txt.
%       flag - format of the input .mat file
%              - 'headerlines'
%              - 'num'
%              - 'cell' <DEFAULT>
%   Pengfei Xu, CUNY, Nov/16/2011
% 
% Copyright 2012-2013 Pengfei Xu Beijing Normal University
% Revision: 1.0 Date: 2011/1/16 00:00:00
%==========================================================================
% check the postfix of the txt file.
if nargin == 3; flag = 'cell';end
if strcmp(fop(end-3:end),'.txt')
    fop = fop;
else
    fop = [fop,'.txt'];
end
if exist(fop,'file')
    warning([fop,' already existed, will be overwritten!']);
end
op = fileparts(fop);
if ~exist(op,'dir')
    mkdir(op);
end
% else    
% if exist(fop,'file') 
%     [pathstr,name,ext] = fileparts(fop);
%     fop = [pathstr filesep name datestr(clock,30) ext]; 
%     warning([op on ' exsits already, so save file to ' fop]);
% end
    fid = fopen(cat(2, fop), 'w');
    if fid < 0;error([fop,' already existed, permission denied!']);end
    for i = 1: length(vn)
    if strcmp(flag,'headerlines') && i == 1; fprintf(fid, vn{i});       end
    if strcmp(flag,'num');                   fprintf(fid, '%d ',vn{i}); end
    if strcmp(flag,'cell');                  fprintf(fid, '%s ',vn{i}); end    
    if i ~= length(vn);                      fprintf(fid, '\n');        end
    end
    fclose(fid);
end